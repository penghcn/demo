println "^_^ ************************************************************************************ ^_^"
println "^_^ see gradle init config file at ${System.properties['user.home']}/.gradle/init.gradle "
println "^_^ ************************************************************************************ ^_^"

allprojects{
    ext {   
        jvm_version                     = 1.6
        jvm_version_8                   = 1.8
        guava_version                   = '20.0'
        junit_version                   = '4.12'
        log4j2_version                  = '2.3'//2.4+ requires jdk1.7 
        log4j2_version_jdk8             = '2.8.2'//2.4+ requires jdk1.7 

        
        joda_version                    = '2.9.3'

        xstream_version                 = '1.4.9'
        jackson_version_jdk8            = '2.8.5'//2.8.3
        jackson_version                 = '2.4.6'//2.8.3
        gson_version                    = '2.8.0'
        fastjson_version                = '1.2.33'

        spring_version                  = '4.3.4.RELEASE'//4.2.5
        spring_boot_version             = '1.2.8.RELEASE'//1.3.5 jdk7
        spring_rabbit_version           = '1.7.0.RELEASE'//
        spring_redis_version            = '1.8.0.RELEASE'//
        jedis_version                   = '2.9.0'//

        hibernate_version               = '5.1.0.Final'//5.2+ requires jdk1.8
        hibernate_validator_version     = '5.2.4.Final'
        mybatis_version                 = '3.4.4'
        mybatis_spring_version          = '1.3.1'       
        druid_version                   = '1.0.31'
        c3p0_version                    = '0.9.5.2'
        mysql_connector_version         = '5.1.40'//6.0.2 requires jdk1.8
        mysql_connector_version_jdk8    = '6.0.6'//6.0.2 requires jdk1.8
        hikaricp_jdk6_version           = '2.3.13'//https://github.com/brettwooldridge/HikariCP
        hikaricp_version                = '2.5.1'//https://github.com/brettwooldridge/HikariCP

        httpclient_version              = '4.5.2'
        quartz_version                  = '2.2.1'
        cglib_version                   = '3.2.2'
        dubbo_version                   = '2.5.3'
        zookeeper_version               = '3.4.9'
        zkclient_version                = '0.10'
        javassist_version               = '3.20.0-GA'
        netty_version                   = '3.2.10.Final'//jboss netty
        kryo_version                    = '3.0.3'
        tomcat_version                  = '7.0.68'
        rabbitmq_version                = '3.6.5'
        xmemcached_version              = '2.2.0'
        kafka_version                   = '0.10.2.1'

        pbase_version                   = '1.8.17'

        fuiou_fas_client_version        = '1.3.2'
        fuiou_wx_version                = '1.0.0'
        fuiou_ds_version                = '1.2.2'
        fuiou_xmemcached_version        = '1.2.0'
        fuiou_version                   = '1.2.0'

        fuiou_ds_user_act_version       = '1.2.17'
        fuiou_ds_cab_base_version       = '1.0.0'
        fuiou_box_contract_version      = '1.1.5'
        fuiou_sms_version               = '1.0.7'
        fuiou_ds_o2o_version            = '0.1.4'

        release_dir                     = '/data/release'
        jar_prefix                      = 'fuiou'

        PUBLISH_NAME                    = 'Release'
        PUBLISH_USERNAME                = ''
        PUBLISH_PASSWORD                = ''




        REPO_PROXY_URL                  = 'http://192.168.8.29:29106/repository/maven-central'
        REPO_PUBLISH_URL                = 'http://192.168.8.29:29106/repository/maven-releases'
        REPO_DEV_URL                    = 'http://192.168.8.29:29106/repository/maven-snapshots'
    }

    repositories {
        //maven.oschina.net已经不可用，使用mavenCentral就好，实在嫌下载慢，可使用vpn
        //这里使用自己搭建的maven私有库
        def REPOSITORY_URL = "$REPO_PROXY_URL"//http://maven.oschina.net/content/groups/public
        all { ArtifactRepository repo ->
            if(repo instanceof MavenArtifactRepository){
                def url = repo.url.toString()
                if (url.startsWith('https://repo1.maven.org/maven2') || url.startsWith('https://jcenter.bintray.com/')) {
                    project.logger.lifecycle "Repository ${repo.url} replaced by $REPOSITORY_URL."
                    remove repo
                }
            }
        }
        maven {
            url REPOSITORY_URL
        }
        maven {
            url "$REPO_PUBLISH_URL"
        }

        maven { url 'https://jitpack.io' }
        //mavenCentral()
    }

    task del(type: Delete) { 
        delete ".classpath",".project",".settings"
    }
}
