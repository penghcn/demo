//http://www.infoq.com/cn/articles/Gradle-application-in-large-Java-projects/
//https://github.com/davenkin/gradle-learning
//https://github.com/spring-projects/spring-framework/blob/master/build.gradle
//allprojects {
	group = 'com.fuiou.io.mycat'
	version = '0.1.0'
//}

//subprojects {	
	apply plugin: 'java'
	apply plugin: 'war'
	apply plugin: 'eclipse-wtp'	
	
	sourceCompatibility = jvm_version
	targetCompatibility = jvm_version

	dependencies {
		//compile files("${System.properties['java.home']}/../lib/tools.jar")
		compile (
			//'javax.servlet:javax.servlet-api:3.1.0',
			//'javax.servlet:servlet-api:2.5',
			//'javax.servlet:jsp-api:2.0',
			'jstl:jstl:1.2',
			'taglibs:standard:1.1.2',
			'commons-fileupload:commons-fileupload:1.3.1',
			'commons-logging:commons-logging:1.2',
			'commons-lang:commons-lang:2.6',
			//'org.apache.commons:commons-lang3:3.4',
			'commons-collections:commons-collections:3.2.2',
			'commons-beanutils:commons-beanutils:1.9.2',
			'commons-codec:commons-codec:1.10',

			'com.mchange:c3p0:0.9.5.2',
			'com.mchange:mchange-commons-java:0.2.12',
			'com.alibaba:druid:1.0.25',
			'mysql:mysql-connector-java:5.1.39',//6.0.2 requires jdk1.8	
			'org.mybatis:mybatis:3.4.1',
			'org.mybatis:mybatis-spring:1.3.0',

			//'org.apache.ant:ant-parent:1.9.7',
			'joda-time:joda-time:2.9.3',
			'com.google.guava:guava:19.0',
			'com.thoughtworks.xstream:xstream:1.4.9',

			'com.rabbitmq:amqp-client:3.6.5',

			//'com.alibaba:fastjson:1.2.16',
	                "com.google.code.gson:gson:2.6.2",
			"com.fasterxml.jackson.core:jackson-core:${jackson_version}",//log4j2.json依赖Jackson
			"com.fasterxml.jackson.core:jackson-databind:${jackson_version}",

			"org.apache.httpcomponents:httpclient:${httpclient_version}",
			"org.apache.httpcomponents:httpmime:${httpclient_version}",

			"org.apache.logging.log4j:log4j-api:$log4j2_version",
			"org.apache.logging.log4j:log4j-core:$log4j2_version",
			"org.apache.logging.log4j:log4j-1.2-api:$log4j2_version",
			"org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version",

			"org.springframework:spring-core:${spring_version}",
			"org.springframework:spring-context-support:${spring_version}",
			"org.springframework:spring-web:${spring_version}",
			"org.springframework:spring-webmvc:${spring_version}",
			"org.springframework:spring-orm:${spring_version}",
			"org.springframework:spring-jdbc:${spring_version}",
			"org.springframework:spring-tx:${spring_version}",
			"org.springframework:spring-aop:${spring_version}",
			"org.springframework:spring-messaging:${spring_version}",
			"org.springframework:spring-aspects:${spring_version}",

			'net.sf.ezmorph:ezmorph:1.0.6',
			'net.sf.json:json-lib:2.4-jdk15',

			"com.ibm.db2.jcc:db2jcc:10.1",
			"com.ibm.db2.jcc:db2jcc_license_cu:10.1",
			"org.patchca:patchca:1.2.0",

			"com.fuiou:fuiou-ds:${fuiou_ds_version}",
			"com.fuiou:fuiou-keyLoader:${fuiou_ds_version}",
			"com.fuiou:fuiou-fas-client:1.2.0",
			"com.fuiou:fus-dubbo-client:1.2.0",
			"com.fuiou:fuiou-wx:1.2.0",
			"cn.pengh.pbase:pbase-core:${pbase_version}"
		)
		testCompile "junit:junit:${junit_version}"

		compile ('dom4j:dom4j:1.6') {
			exclude (group: '*')
		}
		compile ('org.springframework.amqp:spring-amqp:1.6.2.RELEASE') {
			exclude (group: '*')
		}
		compile ('org.springframework.amqp:spring-rabbit:1.6.2.RELEASE') {
			exclude (group: '*')
		}
		compile ('org.springframework.retry:spring-retry:1.1.3.RELEASE') {
			exclude (group: '*')
		}
		compile ("cn.pengh.pbase:pbase-mvc:${pbase_version}") {
			exclude (group: '*')
		}
	}
		

	//
	[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

	
	// 生成Eclipse支持时，自动生成Deployment Assembly
	//https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseProject.html
	//https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html
	eclipse.classpath.file.withXml {
		def node = it.asNode();
		for (Node n : node.children()) {
			if ("lib".equals(n.attribute("kind"))) {
				def node_attributes = new Node(n, "attributes");
				def map = new HashMap();
				/*map.put("name", "maven.pomderived");
				map.put("value", "true");*/
				map.put("value", "/WEB-INF/lib");
				def node_attribute = new Node(node_attributes, "attribute", map);
			}
		}
		//修改输出路径，默认${project.projectDir}/bin
		//just for web application
		//node.appendNode('classpathentry', [ combineaccessrules: false, exported: true, kind: 'output', path: webAppDirName+'/WEB-INF/classes' ])
		//设置server apache，需根据本地eclipse配置
		//node.appendNode('classpathentry', [ kind: 'con', path: 'org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v7.0' ])
	}

	/*eclipse {
		//if you want parts of paths in resulting file to be replaced by variables (files):
		//pathVariables 'GRADLE_HOME': file('/best/software/gradle'), 'TOMCAT_HOME': file('../tomcat')
		classpath {
			//you can tweak the classpath of the Eclipse project by adding extra configurations:
			//plusConfigurations += [ configurations.provided ]
			//plusConfigurations += [ maven.pomderived ]

			//you can also remove configurations from the classpath:
			//minusConfigurations += [ configurations.someBoringConfig ]

			//if you want to append extra containers:
			containers 'mavenContainer'

			//customizing the classes output directory:
			defaultOutputDir = file('build-eclipse')

			//default settings for downloading sources and Javadoc:
			downloadSources = true
			downloadJavadoc = false
		}
	}
*/
	

	//https://docs.gradle.org/current/dsl/org.gradle.api.Project.html
	/*println "${rootProject.buildDir}"
	println "${project.buildDir}"
	println "${project.rootDir}"*/
//}
