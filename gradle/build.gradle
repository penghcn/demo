//http://www.infoq.com/cn/articles/Gradle-application-in-large-Java-projects/
//https://github.com/davenkin/gradle-learning
//https://github.com/spring-projects/spring-framework/blob/master/build.gradle
//allprojects {
	group = 'com.fuiou.io.mycat'
	version = '0.1.0'
	ext {	
		jvm_version                     = 1.6
		junit_version                   = '4.12'
		spring_version                  = '4.2.5.RELEASE'
		spring_boot_version             = '1.2.8.RELEASE'//1.3.5 jdk7
		hibernate_version               = '5.1.0.Final'//5.2+ requires jdk1.8
		hibernate_validator_version     = '5.2.4.Final'
		jackson_version                 = '2.4.6'
		log4j2_version                  = '2.3'//2.4+ requires jdk1.7
		httpclient_version              = '4.5.2'
		quartz_version                  = '2.2.1'
		cglib_version                   = '3.2.2'
		dubbo_version                   = '2.5.3'
		zookeeper_version               = '3.4.8'
		zkclient_version                = '0.9'
		javassist_version               = '3.20.0-GA'
		netty_version                   = '3.2.10.Final'
		kryo_version                    = '3.0.3'
		tomcat_version                  = '7.0.59'
		local_libs                      = 'c:/www/pengh/libs'
		release_dir                     = 'c:/users/pengh/desktop/release'
	}

	repositories {
		mavenCentral()
		//flatDir(dirs: "$projectDir/libs")
	}  
	
//}

//subprojects {	
	apply plugin: 'java'
	apply plugin: 'war'
	apply plugin: 'eclipse-wtp'	
	
	sourceCompatibility = jvm_version
	targetCompatibility = jvm_version

	dependencies {
		//compile files("${System.properties['java.home']}/../lib/tools.jar")
		compile (
			//'javax.servlet:javax.servlet-api:3.1.0',
			//'javax.servlet:servlet-api:2.5',
			//'javax.servlet:jsp-api:2.0',
			'jstl:jstl:1.2',
			'taglibs:standard:1.1.2',
			'commons-fileupload:commons-fileupload:1.3.1',
			'commons-logging:commons-logging:1.2',
			'commons-lang:commons-lang:2.6',
			//'org.apache.commons:commons-lang3:3.4',
			'commons-collections:commons-collections:3.2.2',
			'commons-beanutils:commons-beanutils:1.9.2',
			'commons-codec:commons-codec:1.10',

			'com.mchange:c3p0:0.9.5.2',
			'com.mchange:mchange-commons-java:0.2.12',
			'com.alibaba:druid:1.0.25',
			'mysql:mysql-connector-java:5.1.39',//6.0.2 requires jdk1.8	
			'org.mybatis:mybatis:3.4.1',
			'org.mybatis:mybatis-spring:1.3.0',

			//'org.apache.ant:ant-parent:1.9.7',
			'joda-time:joda-time:2.9.3',
			'com.google.guava:guava:19.0',
			'com.thoughtworks.xstream:xstream:1.4.9',

			'com.rabbitmq:amqp-client:3.6.5',

			//'com.alibaba:fastjson:1.2.16',
	        "com.google.code.gson:gson:2.6.2",
			"com.fasterxml.jackson.core:jackson-core:${jackson_version}",//log4j2.json依赖Jackson
			"com.fasterxml.jackson.core:jackson-databind:${jackson_version}",

			"org.apache.httpcomponents:httpclient:${httpclient_version}",
			"org.apache.httpcomponents:httpmime:${httpclient_version}",

			"org.apache.logging.log4j:log4j-api:$log4j2_version",
			"org.apache.logging.log4j:log4j-core:$log4j2_version",
			"org.apache.logging.log4j:log4j-1.2-api:$log4j2_version",
			"org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version",

			"org.springframework:spring-core:${spring_version}",
			"org.springframework:spring-context-support:${spring_version}",
			"org.springframework:spring-web:${spring_version}",
			"org.springframework:spring-webmvc:${spring_version}",
			"org.springframework:spring-orm:${spring_version}",
			"org.springframework:spring-jdbc:${spring_version}",
			"org.springframework:spring-tx:${spring_version}",
			"org.springframework:spring-aop:${spring_version}",
			"org.springframework:spring-messaging:${spring_version}",
			"org.springframework:spring-aspects:${spring_version}"
		)
		testCompile "junit:junit:${junit_version}"

		compile fileTree(dir: "${local_libs}/pbase", 		include: '*.jar')
		compile fileTree(dir: "${local_libs}/jdbc/driver", 	include: '*.jar')
		compile fileTree(dir: "${local_libs}/json/jsonlib", include: '*.jar')
		compile files(
			"${local_libs}/fuiou/fuiou-ds-1.1.0.jar",
			"${local_libs}/fuiou/fuiou_keyLoader.jar",
			"${local_libs}/fuiou/fuiou-wx-1.0.0.jar"
			)
		compile files("${local_libs}/other/patchca-1.0.1.jar")

		compile ('dom4j:dom4j:1.6') {
			exclude (group: '*')
		}
		compile ('org.springframework.amqp:spring-amqp:1.6.2.RELEASE') {
			exclude (group: '*')
		}
		compile ('org.springframework.amqp:spring-rabbit:1.6.2.RELEASE') {
			exclude (group: '*')
		}
		compile ('org.springframework.retry:spring-retry:1.1.3.RELEASE') {
			exclude (group: '*')
		}
	}
		

	//
	[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

	
	// 生成Eclipse支持时，自动生成Deployment Assembly
	//https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseProject.html
	//https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html
	eclipse.classpath.file.withXml {
		def node = it.asNode();
		for (Node n : node.children()) {
			if ("lib".equals(n.attribute("kind"))) {
				def node_attributes = new Node(n, "attributes");
				def map = new HashMap();
				map.put("value", "libs");
				def node_attribute = new Node(node_attributes, "attribute", map);
			}
		}
		//修改输出路径，默认${project.projectDir}/bin
		//just for web application
		//node.appendNode('classpathentry', [ combineaccessrules: false, exported: true, kind: 'output', path: webAppDirName+'/WEB-INF/classes' ])
		//设置server apache，需根据本地eclipse配置
		//node.appendNode('classpathentry', [ kind: 'con', path: 'org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v7.0' ])
	}

	
	task dirs << {
		sourceSets*.java.srcDirs*.each { it.mkdirs() }
		sourceSets*.resources.srcDirs*.each { it.mkdirs() }	
		//for web app --> src/main/webapp
		webAppDir.mkdirs()
	}
	//上传到指定目录
	task up(type: Copy) { 
		from "${project.buildDir}/libs"
		into "$release_dir"
		include "${project.name}-${project.version}.*ar"
	}

	task del(type: Delete) { 
		delete ".classpath",".project",".settings"
	}

	//https://docs.gradle.org/current/dsl/org.gradle.api.Project.html
	/*println "${rootProject.buildDir}"
	println "${project.buildDir}"
	println "${project.rootDir}"*/
//}
